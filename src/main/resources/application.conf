clustering {
  hostname = "127.0.0.1"
  hostname = ${?CLUSTER_IP}
  port = 2552
  port = ${?CLUSTER_PORT}
  seed-hostname = "127.0.0.1"
  seed-hostname = ${?CLUSTER_SEED_IP}
  seed-port = 2552
  seed-port = ${?CLUSTER_SEED_PORT}
  cluster.name = distributed-geobroker
}

application {
  api {
    hostname = "127.0.0.1"
    hostname = ${?SERVER_IP}
    port = 8000
    port = ${?SERVER_PORT}
  }
}

akka {

  extensions = [
    "akka.cluster.metrics.ClusterMetricsExtension"
    "com.romix.akka.serialization.kryo.KryoSerializationExtension$"
  ]

  actor {
    provider = "cluster"

    allow-java-serialization = off

    serializers {
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }

    serialization-bindings {
      // General
      "java.util.ArrayList" = kryo
      "java.lang.String" = kryo
      // Message for communication between clients and brokers/servers
      "com.chaitas.distributed.geobroker.Messages.ExternalMessages.ExternalMessage" = kryo
      // Messages for communication between brokers/servers(internal communication)
      "com.chaitas.distributed.geobroker.Messages.InternalMessages.ProcessCONNECT" = kryo
      "com.chaitas.distributed.geobroker.Messages.InternalMessages.ProcessDISCONNECT" = kryo
      "com.chaitas.distributed.geobroker.Messages.InternalMessages.ProcessPINGREQ" = kryo
      "com.chaitas.distributed.geobroker.Messages.InternalMessages.ProcessUNSUBSCRIBE" = kryo
      "com.chaitas.distributed.geobroker.Messages.InternalMessages.ProcessSUBSCRIBE" = kryo
      "com.chaitas.distributed.geobroker.Messages.InternalMessages.ProcessPUBLISH" = kryo
      "com.chaitas.distributed.geobroker.Messages.InternalMessages.SendACK" = kryo
      "com.chaitas.distributed.geobroker.Messages.InternalMessages.PublisherGeoMatching" = kryo
      "com.chaitas.distributed.geobroker.Messages.InternalMessages.Publish" = kryo
    }

    kryo{
      type = "graph"
      idstrategy = "explicit"
      serializer-pool-size = 16
      buffer-size = 4096
      max-buffer-size = -1
      use-manifests = false
      implicit-registration-logging = false
      kryo-trace = false,
      resolve-subclasses = true,
      kryo-custom-serializer-init = "com.chaitas.distributed.geobroker.Utils.AkkaKryoInitializer"
    }

  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = ${clustering.hostname}
      port = ${clustering.port}
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://"${clustering.cluster.name}"@"${clustering.seed-hostname}":"${clustering.seed-port}
    ]
  }

  management {
    http {
      hostname = ${clustering.hostname}
      port = 8558
    }
  }

}

akka.discovery.method = config

# Keep TCP connections alive
akka.http.server.websocket.periodic-keep-alive-max-idle = 1 second

akka.cluster.jmx.multi-mbeans-in-same-jvm = on