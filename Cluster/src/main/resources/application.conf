akka {

  extensions = [
    "akka.cluster.metrics.ClusterMetricsExtension"
    "com.romix.akka.serialization.kryo.KryoSerializationExtension$"
  ]

  actor {
    provider = "cluster"

    allow-java-serialization = off

    serializers {
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }

    serialization-bindings {
      // General
      "java.util.ArrayList" = kryo
      "java.lang.String" = kryo
      // Message for communication between clients and brokers/servers
      "com.chaitas.masterthesis.commons.message.InternalServerMessage" = kryo
      // Messages for communication between brokers/servers(internal communication)
      "com.chaitas.masterthesis.cluster.Messages.ProcessPUBLISH" = kryo
      "com.chaitas.masterthesis.cluster.Messages.ProcessSUBSCRIBE" = kryo
      "com.chaitas.masterthesis.cluster.Messages.SendPUBACK" = kryo
      "com.chaitas.masterthesis.cluster.Messages.SendSUBACK" = kryo
      "com.chaitas.masterthesis.cluster.Messages.GeoMatching" = kryo

    }

    kryo{
      type = "graph"
      idstrategy = "explicit"
      serializer-pool-size = 16
      buffer-size = 4096
      max-buffer-size = -1
      use-manifests = false
      implicit-registration-logging = true
      kryo-trace = true,
      resolve-subclasses = true,
      kryo-custom-serializer-init = "com.chaitas.masterthesis.cluster.util.AkkaKryoInitializer"

    }

  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2551
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://clusterSystem@127.0.0.1:2551",
    ]

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    auto-down-unreachable-after = 15s
  }

  management {
    http {
      hostname = "127.0.0.1"
      port = 8558
    }
  }

}

api {
  http {
    hostname = "127.0.0.1"
    port = 8080
  }
}

akka.http.server.websocket.periodic-keep-alive-max-idle = 1 second


# Sigar native library extract location during tests.
# Note: use per-jvm-instance folder when running multiple jvm on one host.
akka.cluster.metrics.native-library-extract-folder = ${user.dir}/target/native

akka.cluster.jmx.multi-mbeans-in-same-jvm = on